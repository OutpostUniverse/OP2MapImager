<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{C2D3BC8B-BC2D-40C6-8B59-9E9B449B73FC}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>OP2MapImager</RootNamespace>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>OP2Utility\include;FreeImage\Dist\x32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <SDLCheck>true</SDLCheck>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link>
      <AdditionalDependencies>FreeImage.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>FreeImage/Dist/x32;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SubSystem>Console</SubSystem>
    </Link>
    <PostBuildEvent>
      <Command>REM Place FreeImage DLL into debug or release directory for running application within Visual Studio.
SET freeImagePlatformDirectory="x32"
if $(Platform) == x64 (
   SET freeImagePlatformDirectory="x64"
)
xcopy /y /d "$(ProjectDir)FreeImage\Dist\%freeImagePlatformDirectory%\FreeImage.dll" "$(OutDir)"


SET zipName="OP2MapImager Ver2.1.0"
SET directoryName=$(OutDir)%25zipName%25 

SET pdbDirectoryName=$(OutDir)%25zipName%"_PDB"

if $(ConfigurationName) == Release (
    mkdir %25directoryName%25
    mkdir %25pdbDirectoryName%25 

    xcopy /y /d "$(ProjectDir)well00*.bmp" %25directoryName%25
    xcopy /y /d "$(ProjectDir)FreeImage license-gplv3.txt" %25directoryName%25
    xcopy /y /d "$(ProjectDir)ReadMe.txt" %25directoryName%25
    xcopy /y /d "$(OutDir)FreeImage.dll" %25directoryName%25
    xcopy /y /d "$(OutDir)$(TargetFileName)" %25directoryName%25

    xcopy /y /d "$(OutDir)OP2MapImager.pdb" %25pdbDirectoryName%25

    REM Use 7Zip to zip final version
    7za a -tzip $(OutDir)%25zipName%25.zip %25directoryName%25
    
    DEL /q %25directoryName%25\*.*
    RMDIR %25directoryName%25 /s /q

    7za a -tzip $(OutDir)%25zipName%25"_PDB".zip %25pdbDirectoryName%25
    DEL /q %25pdbDirectoryName%25\*.*
    RMDIR %25pdbDirectoryName%25 /s /q
)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>OP2Utility\include;FreeImage\Dist\x64;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <AdditionalDependencies>FreeImage.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>FreeImage/Dist/x64;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SubSystem>Console</SubSystem>
    </Link>
    <PostBuildEvent>
      <Command>REM Place FreeImage DLL into debug or release directory for running application within Visual Studio.
SET freeImagePlatformDirectory="x32"
if $(Platform) == x64 (
   SET freeImagePlatformDirectory="x64"
)
xcopy /y /d "$(ProjectDir)FreeImage\Dist\%freeImagePlatformDirectory%\FreeImage.dll" "$(OutDir)"


SET zipName="OP2MapImager Ver2.1.0"
SET directoryName=$(OutDir)%25zipName%25 

SET pdbDirectoryName=$(OutDir)%25zipName%"_PDB"

if $(ConfigurationName) == Release (
    mkdir %25directoryName%25
    mkdir %25pdbDirectoryName%25 

    xcopy /y /d "$(ProjectDir)well00*.bmp" %25directoryName%25
    xcopy /y /d "$(ProjectDir)FreeImage license-gplv3.txt" %25directoryName%25
    xcopy /y /d "$(ProjectDir)ReadMe.txt" %25directoryName%25
    xcopy /y /d "$(OutDir)FreeImage.dll" %25directoryName%25
    xcopy /y /d "$(OutDir)$(TargetFileName)" %25directoryName%25

    xcopy /y /d "$(OutDir)OP2MapImager.pdb" %25pdbDirectoryName%25

    REM Use 7Zip to zip final version
    7za a -tzip $(OutDir)%25zipName%25.zip %25directoryName%25
    
    DEL /q %25directoryName%25\*.*
    RMDIR %25directoryName%25 /s /q

    7za a -tzip $(OutDir)%25zipName%25"_PDB".zip %25pdbDirectoryName%25
    DEL /q %25pdbDirectoryName%25\*.*
    RMDIR %25pdbDirectoryName%25 /s /q
)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>OP2Utility\include;FreeImage\Dist\x32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <SDLCheck>true</SDLCheck>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <AdditionalDependencies>FreeImage.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>FreeImage/Dist/x32;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PostBuildEvent>
      <Command>REM Place FreeImage DLL into debug or release directory for running application within Visual Studio.
SET freeImagePlatformDirectory="x32"
if $(Platform) == x64 (
   SET freeImagePlatformDirectory="x64"
)
xcopy /y /d "$(ProjectDir)FreeImage\Dist\%freeImagePlatformDirectory%\FreeImage.dll" "$(OutDir)"


SET zipName="OP2MapImager Ver2.1.0"
SET directoryName=$(OutDir)%25zipName%25 

SET pdbDirectoryName=$(OutDir)%25zipName%"_PDB"

if $(ConfigurationName) == Release (
    mkdir %25directoryName%25
    mkdir %25pdbDirectoryName%25 

    xcopy /y /d "$(ProjectDir)well00*.bmp" %25directoryName%25
    xcopy /y /d "$(ProjectDir)FreeImage license-gplv3.txt" %25directoryName%25
    xcopy /y /d "$(ProjectDir)ReadMe.txt" %25directoryName%25
    xcopy /y /d "$(OutDir)FreeImage.dll" %25directoryName%25
    xcopy /y /d "$(OutDir)$(TargetFileName)" %25directoryName%25

    xcopy /y /d "$(OutDir)OP2MapImager.pdb" %25pdbDirectoryName%25

    REM Use 7Zip to zip final version
    7za a -tzip $(OutDir)%25zipName%25.zip %25directoryName%25
    
    DEL /q %25directoryName%25\*.*
    RMDIR %25directoryName%25 /s /q

    7za a -tzip $(OutDir)%25zipName%25"_PDB".zip %25pdbDirectoryName%25
    DEL /q %25pdbDirectoryName%25\*.*
    RMDIR %25pdbDirectoryName%25 /s /q
)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>OP2Utility\include;FreeImage\Dist\x64;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <SDLCheck>true</SDLCheck>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <AdditionalDependencies>FreeImage.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>FreeImage/Dist/x64;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PostBuildEvent>
      <Command>REM Place FreeImage DLL into debug or release directory for running application within Visual Studio.
SET freeImagePlatformDirectory="x32"
if $(Platform) == x64 (
   SET freeImagePlatformDirectory="x64"
)
xcopy /y /d "$(ProjectDir)FreeImage\Dist\%freeImagePlatformDirectory%\FreeImage.dll" "$(OutDir)"


SET zipName="OP2MapImager Ver2.1.0"
SET directoryName=$(OutDir)%25zipName%25 

SET pdbDirectoryName=$(OutDir)%25zipName%"_PDB"

if $(ConfigurationName) == Release (
    mkdir %25directoryName%25
    mkdir %25pdbDirectoryName%25 

    xcopy /y /d "$(ProjectDir)well00*.bmp" %25directoryName%25
    xcopy /y /d "$(ProjectDir)FreeImage license-gplv3.txt" %25directoryName%25
    xcopy /y /d "$(ProjectDir)ReadMe.txt" %25directoryName%25
    xcopy /y /d "$(OutDir)FreeImage.dll" %25directoryName%25
    xcopy /y /d "$(OutDir)$(TargetFileName)" %25directoryName%25

    xcopy /y /d "$(OutDir)OP2MapImager.pdb" %25pdbDirectoryName%25

    REM Use 7Zip to zip final version
    7za a -tzip $(OutDir)%25zipName%25.zip %25directoryName%25
    
    DEL /q %25directoryName%25\*.*
    RMDIR %25directoryName%25 /s /q

    7za a -tzip $(OutDir)%25zipName%25"_PDB".zip %25pdbDirectoryName%25
    DEL /q %25pdbDirectoryName%25\*.*
    RMDIR %25pdbDirectoryName%25 /s /q
)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="src\ConsoleArgumentParser.cpp" />
    <ClCompile Include="src\FreeImageBmp.cpp" />
    <ClCompile Include="src\Main.cpp" />
    <ClCompile Include="src\MapImager.cpp" />
    <ClCompile Include="src\RenderManager.cpp" />
    <ClCompile Include="src\Timer.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="resource.h" />
    <ClInclude Include="src\ConsoleArgumentParser.h" />
    <ClInclude Include="FreeImage\Dist\x32\FreeImage.h" />
    <ClInclude Include="src\FreeImageBmp.h" />
    <ClInclude Include="src\MapImager.h" />
    <ClInclude Include="src\RenderManager.h" />
    <ClInclude Include="src\Timer.h" />
  </ItemGroup>
  <ItemGroup>
    <Text Include="FreeImage license-gplv3.txt" />
    <Text Include="ReadMe.txt" />
  </ItemGroup>
  <ItemGroup>
    <None Include="FreeImage\Dist\x32\FreeImage.dll" />
  </ItemGroup>
  <ItemGroup>
    <Library Include="FreeImage\Dist\x32\FreeImage.lib" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="OP2Utility\OP2Utility.vcxproj">
      <Project>{980d53d9-f9e2-4682-9307-1303c9e42313}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="OP2MapImager.rc" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>